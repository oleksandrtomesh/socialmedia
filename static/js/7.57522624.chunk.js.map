{"version":3,"sources":["components/Users/User/UserStyles.ts","components/Users/User/User.tsx","components/Users/FilterUsersBar/FilterUsersBar.tsx","components/Users/Users.tsx"],"names":["useStyles","makeStyles","containerGrid","marginTop","paper","padding","width","button","background","color","userPhoto","userName","textAlign","User","user","followingInProgress","toggleFollowingUser","classes","Grid","container","direction","justify","className","Paper","square","to","id","alt","src","photos","small","Typography","noWrap","name","Button","fullWidth","disabled","some","onClick","followed","FilterUsersBar","handleFilterSubmit","filter","formik","useFormik","initialValues","term","friend","String","onSubmit","values","setSubmitting","filterBoolean","handleSubmit","style","spacing","item","xs","md","TextField","label","size","variant","value","onChange","handleChange","FormControl","InputLabel","Select","labelId","MenuItem","CustomButton","Users","React","memo","dispatch","useDispatch","pageSize","useSelector","getPageSize","totalUsersCount","getTotalUsersCount","currentPage","getCurrentPage","getFilter","users","getUsers","isFetching","getIsFetching","getFollowingInProgress","toggleFollowingUsers","userId","history","useHistory","useEffect","parse","queryString","location","search","substr","actualPage","actualFilter","page","Number","getUsersWithFilter","push","pathname","display","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","alignItems","map","sm","UsersPage","withAuthRedirect"],"mappings":"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","file":"static/js/7.57522624.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n    containerGrid:{\r\n        marginTop: '12px',\r\n    },\r\n    paper:{\r\n        padding: '15px',\r\n        width: '100%'\r\n    },\r\n    button:{\r\n        background: 'linear-gradient(45deg, gray, #2d2d2d)',\r\n        color: 'white',\r\n        marginTop: '15px'\r\n    },\r\n    userPhoto:{\r\n        width: '100%'\r\n    },\r\n    userName:{\r\n        marginTop: '15px',\r\n        textAlign: 'center'\r\n    }\r\n});","import React from 'react';\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UsersType } from '../../../redux/users-reducer'\r\nimport { Button, Grid, Paper } from '@material-ui/core';\r\nimport { useStyles } from './UserStyles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    toggleFollowingUser: (userId: number, followed: boolean) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user , followingInProgress, toggleFollowingUser}) => {\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" className={classes.containerGrid}>\r\n        <Paper className={classes.paper} square>\r\n            <div> \r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img alt=\"small avatar\" className={classes.userPhoto}\r\n                        src={user.photos.small !== null ? user.photos.small : userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <Typography noWrap className={classes.userName}>{user.name}</Typography>\r\n                {/* <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div> */}\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    className={classes.button}\r\n                    fullWidth\r\n                    disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => { toggleFollowingUser(user.id, user.followed) }}\r\n                >\r\n                    {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                </Button>\r\n            </div>\r\n        </Paper>\r\n        </Grid>\r\n    \r\n    )\r\n\r\n}\r\n\r\nexport default User","import { FormControl, Grid, InputLabel, MenuItem, Paper, Select, TextField } from '@material-ui/core';\r\nimport { Field, Form, Formik, useFormik } from 'formik';\r\nimport React from 'react'\r\nimport { FilterType } from '../../../redux/users-reducer';\r\nimport { CustomButton } from '../../commonElements/CustomButton';\r\n\r\n\r\nconst filterUsersBarValidation = (value: any) => {\r\n\r\n}\r\n\r\nconst FilterUsersBar: React.FC<PropsType> = ({handleFilterSubmit, filter}) => {\r\n\r\n    const submit = (values: FormValuesType , { setSubmitting }: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n\r\n        //object to convert string values into boolean in values.friend\r\n        const filterBoolean: FilterType  = {\r\n            term: values.term,\r\n            friend: values.friend === 'false' ? false : values.friend === 'true' ? true : null\r\n        }\r\n\r\n        //function execute getUsersWithFilter thunk \r\n        handleFilterSubmit(filterBoolean)\r\n        setSubmitting(false); \r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            term: filter.term,\r\n            friend: String(filter.friend) as Friend,\r\n        },\r\n        //validationSchema: validationSchema,\r\n        onSubmit: submit\r\n    })\r\n    return (\r\n        \r\n        <form onSubmit={formik.handleSubmit}>\r\n            <Paper square style={{padding: '1rem'}}>\r\n                <Grid container direction='row' spacing={2}>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                            id='term'\r\n                            name='term'\r\n                            label='Provide filter query'\r\n                            size='small'\r\n                            variant='outlined'\r\n                            color='primary'\r\n                            fullWidth\r\n                            value={formik.values.term}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormControl variant=\"outlined\" fullWidth size='small'>\r\n                            <InputLabel id=\"friend\">Filter following users</InputLabel>\r\n                            <Select\r\n                                labelId=\"friend\"\r\n                                id=\"selects\"\r\n                                value={formik.values.friend}\r\n                                onChange={formik.handleChange('friend')}\r\n                                label='Filter following users'\r\n                            >\r\n                                <MenuItem value='null'>All users</MenuItem>\r\n                                <MenuItem value='true'>Only followed</MenuItem>\r\n                                <MenuItem value='false'>Only unfollowed</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <CustomButton>\r\n                            Submit\r\n            </CustomButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </form>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default FilterUsersBar\r\n\r\ntype PropsType = {\r\n    handleFilterSubmit: (filter: FilterType) => void\r\n    filter: FilterType\r\n}\r\n\r\ntype Friend = \"true\" | \"null\" | \"false\"\r\ntype FormValuesType = {\r\n    term: string\r\n    friend: Friend\r\n}","import React, { useEffect } from 'react';\r\n//import styles from './UsersPage.module.css';\r\nimport Pagination from 'react-js-pagination'\r\nimport User from './User/User';\r\nimport { FilterType, handlePageChange, getUsersWithFilter, toggleFollowingUser } from '../../redux/users-reducer';\r\nimport FilterUsersBar from './FilterUsersBar/FilterUsersBar';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getFilter,\r\n    getUsers,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../redux/selectors/usersSelectors';\r\nimport Loader from '../commonElements/loader/loader';\r\nimport withAuthRedirect from '../../HightOrderComponent(hoc)/withAuthRedirect';\r\nimport { useHistory } from 'react-router';\r\nimport * as queryString from 'querystring'\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nlet Users: React.FC =React.memo( () => {\r\n\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const pageSize = useSelector(getPageSize)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const filter = useSelector(getFilter)\r\n    const users = useSelector(getUsers)\r\n    const isFetching = useSelector(getIsFetching)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const handleFilterSubmit = (filter: FilterType) => {\r\n        dispatch(getUsersWithFilter(1, pageSize, filter))\r\n    }\r\n    const onPageChange = (pageNumber: number): void =>{\r\n        dispatch(handlePageChange(pageNumber, pageSize, filter))\r\n    }\r\n    const toggleFollowingUsers = (userId: number, followed: boolean) =>{\r\n        dispatch(toggleFollowingUser(userId, followed))\r\n    }\r\n\r\n    //useHistory same as withRouter HOC. It`s gat data from URL\r\n    const history = useHistory()\r\n\r\n    //get users for first page\r\n    useEffect(() => {\r\n\r\n        //parse string(make an object) from url(without ? on the begin substr delete it)\r\n        const parse = queryString.parse(history.location.search.substr(1))\r\n        // parse = {\r\n        //     term: '',\r\n        //     friend: 'true' | 'false' | 'null'\r\n        //     page: number\r\n        // }\r\n\r\n        //start actual data\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        //if url come not empty change our actual data onto data from url query\r\n        if (!!parse.page) actualPage = Number(parse.page)\r\n        if (!!parse.term) actualFilter = {...actualFilter, term: parse.term as string }\r\n        if (!!parse.friend) actualFilter = \r\n            {...actualFilter, friend: parse.friend === \"true\" ? true : parse.friend === \"false\" ? false: null}\r\n        \r\n        //dispatch getUsersWithFilter thunk already with actual data from url\r\n        dispatch(getUsersWithFilter(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    //synchronization of url depends on filter data\r\n    useEffect ( ()=> {\r\n\r\n        //push filter data into url\r\n        history.push({\r\n            pathname: '/users',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    return (\r\n        isFetching\r\n            ? <Loader />\r\n            :\r\n            <Grid container direction=\"column\">\r\n                <Grid item xs={12} justify='center' style={{display: 'flex'}}>\r\n                    <Pagination\r\n                        activePage={currentPage}\r\n                        itemsCountPerPage={pageSize}\r\n                        totalItemsCount={totalUsersCount}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={onPageChange}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <FilterUsersBar handleFilterSubmit={handleFilterSubmit} filter={filter} />\r\n                </Grid>\r\n                <Grid item container direction='row' alignItems=\"center\" spacing={2}>\r\n                    {users.map(user =>\r\n                        <Grid item xs={12} sm={6} md={4} justify=\"center\">\r\n                            <User key={user.id} user={user}\r\n                                toggleFollowingUser={toggleFollowingUsers} followingInProgress={followingInProgress} />\r\n                        </Grid>\r\n                        )}\r\n                </Grid>\r\n            </Grid>\r\n    );\r\n})\r\n\r\nconst UsersPage = withAuthRedirect(Users)\r\nexport default UsersPage\r\n\r\n"],"sourceRoot":""}