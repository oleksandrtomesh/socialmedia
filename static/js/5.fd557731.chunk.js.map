{"version":3,"sources":["components/Users/User/UsersPage.module.css","components/Users/UsersPage.module.css","components/Users/User/User.tsx","components/Users/FilterUsersBar/FilterUsersBar.tsx","components/Users/Users.tsx"],"names":["module","exports","User","user","followingInProgress","toggleFollowingUser","className","styles","item","avatarButton","to","id","alt","profileImg","src","photos","small","userPhoto","Button","type","variant","disabled","some","onClick","followed","name","status","filterUsersBarValidation","value","FilterUsersBar","handleFilterSubmit","filter","initialValues","term","friend","String","validate","onSubmit","values","setSubmitting","filterBoolean","isSubmitting","placeholder","as","Users","React","memo","dispatch","useDispatch","pageSize","useSelector","getPageSize","totalUsersCount","getTotalUsersCount","currentPage","getCurrentPage","getFilter","users","getUsers","isFetching","getIsFetching","getFollowingInProgress","toggleFollowingUsers","userId","history","useHistory","useEffect","parse","queryString","location","search","substr","actualPage","actualFilter","page","Number","getUsersWithFilter","push","pathname","pagination","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","pageNumber","handlePageChange","itemClass","linkClass","filterUsersBar","map","UsersPage","withAuthRedirect"],"mappings":"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","file":"static/js/5.fd557731.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UsersPage_item__2M5xp\",\"avatarButton\":\"UsersPage_avatarButton__3QkLA\",\"profileImg\":\"UsersPage_profileImg__31-bS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"UsersPage_pagination__Vzt88\",\"filterUsersBar\":\"UsersPage_filterUsersBar__33s0M\"};","import React from 'react';\r\nimport styles from './UsersPage.module.css';\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { UsersType } from '../../../redux/users-reducer'\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    toggleFollowingUser: (userId: number, followed: boolean) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user , followingInProgress, toggleFollowingUser}) => {\r\n\r\n    return (\r\n    <div className={styles.item}>\r\n        <div className={styles.avatarButton}>\r\n            <div>\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img alt=\"small avatar\" className={styles.profileImg}\r\n                        src={user.photos.small !== null ? user.photos.small : userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <Button type=\"submit\" variant=\"dark\" \r\n                    disabled={followingInProgress.some(id => id === user.id)} \r\n                    onClick={() => {toggleFollowingUser(user.id, user.followed)}}\r\n                >\r\n                    {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n            {/* <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div> */}\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default User","import { Field, Form, Formik } from 'formik';\r\nimport React from 'react'\r\nimport { FilterType } from '../../../redux/users-reducer';\r\n\r\n\r\nconst filterUsersBarValidation = (value: any) => {\r\n\r\n}\r\n\r\nconst FilterUsersBar: React.FC<PropsType> = ({handleFilterSubmit, filter}) => {\r\n\r\n    const submit = (values: FormValuesType , { setSubmitting }: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n\r\n        //object to convert string values into boolean in values.friend\r\n        const filterBoolean: FilterType  = {\r\n            term: values.term,\r\n            friend: values.friend === 'false' ? false : values.friend === 'true' ? true : null\r\n        }\r\n\r\n        //function execute getUsersWithFilter thunk \r\n        handleFilterSubmit(filterBoolean)\r\n        setSubmitting(false);       \r\n    }\r\n    return (<Formik\r\n        initialValues={{ term: filter.term, friend: String(filter.friend) as Friend }}\r\n        validate={filterUsersBarValidation}\r\n        onSubmit={submit}\r\n    >\r\n        {({ isSubmitting }) => (\r\n            <Form>\r\n                <Field type='text' name='term' placeholder=\"Provide filter query\" />\r\n                <Field as='select' name='friend' >\r\n                    <option value=\"null\">All users</option>\r\n                    <option value=\"true\">Only followed</option>\r\n                    <option value=\"false\">Only unfollowed</option>\r\n                </Field>\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                    Submit\r\n                </button>\r\n            </Form>\r\n        )}\r\n    </Formik>)\r\n\r\n}\r\n\r\nexport default FilterUsersBar\r\n\r\ntype PropsType = {\r\n    handleFilterSubmit: (filter: FilterType) => void\r\n    filter: FilterType\r\n}\r\n\r\ntype Friend = \"true\" | \"null\" | \"false\"\r\ntype FormValuesType = {\r\n    term: string\r\n    friend: Friend\r\n}","import React, { useEffect } from 'react';\r\n//import styles from './UsersPage.module.css';\r\nimport Pagination from 'react-js-pagination'\r\nimport User from './User/User';\r\nimport styles from './UsersPage.module.css'\r\nimport { FilterType, handlePageChange, getUsersWithFilter, toggleFollowingUser } from '../../redux/users-reducer';\r\nimport FilterUsersBar from './FilterUsersBar/FilterUsersBar';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getFilter,\r\n    getUsers,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../redux/selectors/usersSelectors';\r\nimport Loader from '../commonElements/loader/loader';\r\nimport withAuthRedirect from '../../HightOrderComponent(hoc)/withAuthRedirect';\r\nimport { useHistory } from 'react-router';\r\nimport * as queryString from 'querystring'\r\n\r\n\r\nlet Users: React.FC =React.memo( () => {\r\n\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const pageSize = useSelector(getPageSize)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const filter = useSelector(getFilter)\r\n    const users = useSelector(getUsers)\r\n    const isFetching = useSelector(getIsFetching)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const handleFilterSubmit = (filter: FilterType) => {\r\n        dispatch(getUsersWithFilter(1, pageSize, filter))\r\n    }\r\n    const onPageChange = (pageNumber: number): void =>{\r\n        dispatch(handlePageChange(pageNumber, pageSize, filter))\r\n    }\r\n    const toggleFollowingUsers = (userId: number, followed: boolean) =>{\r\n        dispatch(toggleFollowingUser(userId, followed))\r\n    }\r\n\r\n    //useHistory same as withRouter HOC. It`s gat data from URL\r\n    const history = useHistory()\r\n    debugger\r\n\r\n    //get users for first page\r\n    useEffect(() => {\r\n\r\n        //parse string(make an object) from url(without ? on the begin substr delete it)\r\n        const parse = queryString.parse(history.location.search.substr(1))\r\n        // parse = {\r\n        //     term: '',\r\n        //     friend: 'true' | 'false' | 'null'\r\n        //     page: number\r\n        // }\r\n\r\n        //start actual data\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        //if url come not empty change our actual data onto data from url query\r\n        if (!!parse.page) actualPage = Number(parse.page)\r\n        if (!!parse.term) actualFilter = {...actualFilter, term: parse.term as string }\r\n        if (!!parse.friend) actualFilter = \r\n            {...actualFilter, friend: parse.friend === \"true\" ? true : parse.friend === \"false\" ? false: null}\r\n        \r\n        //dispatch getUsersWithFilter thunk already with actual data from url\r\n        dispatch(getUsersWithFilter(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    //synchronization of url depends on filter data\r\n    useEffect ( ()=> {\r\n\r\n        //push filter data into url\r\n        history.push({\r\n            pathname: '/users',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    return (\r\n            isFetching\r\n            ?<Loader /> \r\n            :<div>\r\n            <div className={styles.pagination}>\r\n            <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={pageSize}\r\n                totalItemsCount={totalUsersCount}\r\n                pageRangeDisplayed={5}\r\n                onChange={onPageChange}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n            />\r\n            </div>\r\n            <div className={styles.filterUsersBar}>\r\n                <FilterUsersBar handleFilterSubmit={handleFilterSubmit} filter={filter}/>\r\n            </div>\r\n            {users.map(user => <User key={user.id} user={user}  \r\n                toggleFollowingUser = {toggleFollowingUsers} followingInProgress={followingInProgress}/>)}\r\n        </div>\r\n    );\r\n})\r\n\r\nconst UsersPage = withAuthRedirect(Users)\r\nexport default UsersPage\r\n\r\n"],"sourceRoot":""}