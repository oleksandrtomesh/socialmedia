{"version":3,"sources":["HightOrderComponent(hoc)/withAuthRedirect.tsx","components/Users/User/UsersPage.module.css","components/Users/UsersPage.module.css","components/Users/User/User.tsx","components/Users/FilterUsersBar/FilterUsersBar.tsx","components/Users/Users.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authorization","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","User","user","followingInProgress","toggleFollowingUser","className","styles","item","avatarButton","id","alt","profileImg","src","photos","small","userPhoto","Button","type","variant","disabled","some","onClick","followed","name","status","filterUsersBarValidation","value","FilterUsersBar","handleFilterSubmit","filter","initialValues","term","friend","validate","onSubmit","values","setSubmitting","filterBoolean","isSubmitting","placeholder","as","UsersPage","useEffect","dispatch","getUsersWithFilter","currentPage","pageSize","useDispatch","useSelector","getPageSize","totalUsersCount","getTotalUsersCount","getCurrentPage","getFilter","users","getUsers","isFetching","getIsFetching","getFollowingInProgress","toggleFollowingUsers","userId","pagination","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","pageNumber","handlePageChange","itemClass","linkClass","filterUsersBar","map"],"mappings":"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","file":"static/js/6.c36dd7a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect} from 'react-redux';\r\nimport { AppStateType } from '../redux/redux-store';\r\n\r\n//state for HOC withAuthRedirect\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>{\r\n    return {\r\n        isAuth: state.authorization.isAuth\r\n    }\r\n}\r\n\r\ntype MSTPtype = {\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst withAuthRedirect = <P extends object>(Component: React.ComponentType<P>) => {\r\n\r\n    class RedirectComponent extends React.Component<MSTPtype>{\r\n        render(){\r\n            const {isAuth, ...props} = this.props\r\n            return !isAuth ? <Redirect to=\"/login\"/>: <Component {...props as P} />\r\n        }\r\n    }\r\n    \r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    //return component already with redirect\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UsersPage_item__2M5xp\",\"avatarButton\":\"UsersPage_avatarButton__3QkLA\",\"profileImg\":\"UsersPage_profileImg__31-bS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"UsersPage_pagination__Vzt88\",\"filterUsersBar\":\"UsersPage_filterUsersBar__33s0M\"};","import React from 'react';\r\nimport styles from './UsersPage.module.css';\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { UsersType } from '../../../redux/users-reducer'\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    toggleFollowingUser: (userId: number, followed: boolean) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user , followingInProgress, toggleFollowingUser}) => {\r\n\r\n    return (\r\n    <div className={styles.item}>\r\n        <div className={styles.avatarButton}>\r\n            <div>\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img alt=\"small avatar\" className={styles.profileImg}\r\n                        src={user.photos.small !== null ? user.photos.small : userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <Button type=\"submit\" variant=\"dark\" \r\n                    disabled={followingInProgress.some(id => id === user.id)} \r\n                    onClick={() => {toggleFollowingUser(user.id, user.followed)}}\r\n                >\r\n                    {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n            {/* <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div> */}\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default User","import { Field, Form, Formik } from 'formik';\r\nimport React from 'react'\r\nimport { FilterType } from '../../../redux/users-reducer';\r\n\r\n\r\nconst filterUsersBarValidation = (value: any) => {\r\n\r\n}\r\n\r\nconst FilterUsersBar: React.FC<PropsType> = ({handleFilterSubmit, filter}) => {\r\n\r\n    const submit = (values: FormValuesType , { setSubmitting }: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n\r\n        //object to convert string values into boolean in values.friend\r\n        const filterBoolean: FilterType  = {\r\n            term: values.term,\r\n            friend: values.friend === 'false' ? false : values.friend === 'true' ? true : null\r\n        }\r\n\r\n        //function execute getUsersWithFilter thunk \r\n        handleFilterSubmit(filterBoolean)\r\n        setSubmitting(false);       \r\n    }\r\n    return (<Formik\r\n        initialValues={{ term: filter.term, friend: \"null\" }}\r\n        validate={filterUsersBarValidation}\r\n        onSubmit={submit}\r\n    >\r\n        {({ isSubmitting }) => (\r\n            <Form>\r\n                <Field type='text' name='term' placeholder=\"Provide filter query\" />\r\n                <Field as='select' name='friend' >\r\n                    <option value=\"null\">All users</option>\r\n                    <option value=\"true\">Only followed</option>\r\n                    <option value=\"false\">Only unfollowed</option>\r\n                </Field>\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                    Submit\r\n                </button>\r\n            </Form>\r\n        )}\r\n    </Formik>)\r\n\r\n}\r\n\r\nexport default FilterUsersBar\r\n\r\ntype PropsType = {\r\n    handleFilterSubmit: (filter: FilterType) => void\r\n    filter: FilterType\r\n}\r\n\r\ntype FormValuesType = {\r\n    term: string\r\n    friend: \"true\" | \"null\" | \"false\" | null\r\n}","import React, { useEffect } from 'react';\r\n//import styles from './UsersPage.module.css';\r\nimport Pagination from 'react-js-pagination'\r\nimport User from './User/User';\r\nimport styles from './UsersPage.module.css'\r\nimport { FilterType, handlePageChange, getUsersWithFilter, toggleFollowingUser } from '../../redux/users-reducer';\r\nimport FilterUsersBar from './FilterUsersBar/FilterUsersBar';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getFilter,\r\n    getUsers,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../redux/selectors/usersSelectors';\r\nimport Loader from '../commonElements/loader/loader';\r\nimport withAuthRedirect from '../../HightOrderComponent(hoc)/withAuthRedirect';\r\n\r\n\r\nlet Users: React.FC = () => {\r\n\r\n    //get users for first page\r\n    useEffect(() => {\r\n        dispatch(getUsersWithFilter(currentPage, pageSize))\r\n    }, [])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const pageSize = useSelector(getPageSize)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const filter = useSelector(getFilter)\r\n    const users = useSelector(getUsers)\r\n    const isFetching = useSelector(getIsFetching)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const handleFilterSubmit = (filter: FilterType) => {\r\n        dispatch(getUsersWithFilter(1, pageSize, filter))\r\n    }\r\n\r\n    const onPageChange = (pageNumber: number): void =>{\r\n        dispatch(handlePageChange(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const toggleFollowingUsers = (userId: number, followed: boolean) =>{\r\n        dispatch(toggleFollowingUser(userId, followed))\r\n    }\r\n\r\n    return (\r\n            isFetching\r\n            ?<Loader /> \r\n            :<div>\r\n            <div className={styles.pagination}>\r\n            <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={pageSize}\r\n                totalItemsCount={totalUsersCount}\r\n                pageRangeDisplayed={5}\r\n                onChange={onPageChange}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n            />\r\n            </div>\r\n            <div className={styles.filterUsersBar}>\r\n                <FilterUsersBar handleFilterSubmit={handleFilterSubmit} filter={filter}/>\r\n            </div>\r\n            {users.map(user => <User key={user.id} user={user}  \r\n                toggleFollowingUser = {toggleFollowingUsers} followingInProgress={followingInProgress}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst UsersPage = withAuthRedirect(Users)\r\nexport default UsersPage\r\n\r\n"],"sourceRoot":""}