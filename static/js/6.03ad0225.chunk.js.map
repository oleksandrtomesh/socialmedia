{"version":3,"sources":["HightOrderComponent(hoc)/withAuthRedirect.js","components/Users/User/UsersPage.module.css","components/Users/UsersPage.module.css","components/Users/User/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authorization","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","User","user","followingInProgress","toggleFollowingUser","className","styles","item","avatarButton","id","alt","profileImg","src","photos","small","userPhoto","Button","type","variant","disabled","some","onClick","followed","name","status","Users","pageSize","totalUsersCount","currentPage","handlePageChange","users","pagination","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","pageNumber","itemClass","linkClass","map","UsersPage","componentDidMount","getUsers","render","isFetching","connector","usersPage","selectPage","compose"],"mappings":"6LAMIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,cAAcD,SA0BrBE,IApBU,SAACC,GAAc,IAI9BC,EAJ8B,4JAMhC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFK,cAAC,IAAD,CAAUC,GAAG,eAPjB,GAIJC,IAAML,WAatC,OAHqCM,YAAQX,EAARW,CAAoCL,K,oBC3B7EM,EAAOC,QAAU,CAAC,KAAO,wBAAwB,aAAe,gCAAgC,WAAa,gC,oBCA7GD,EAAOC,QAAU,CAAC,WAAa,gC,uLC2ChBC,EA/BiB,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,KAAOC,EAA8C,EAA9CA,oBAAqBC,EAAyB,EAAzBA,oBAE1D,OACA,sBAAKC,UAAWC,IAAOC,KAAvB,UACI,sBAAKF,UAAWC,IAAOE,aAAvB,UACI,8BACI,cAAC,IAAD,CAASZ,GAAI,YAAcM,EAAKO,GAAhC,SACI,qBAAKC,IAAI,eAAeL,UAAWC,IAAOK,WACtCC,IAA2B,OAAtBV,EAAKW,OAAOC,MAAiBZ,EAAKW,OAAOC,MAAQC,UAGlE,8BACI,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,OAC1BC,SAAUhB,EAAoBiB,MAAK,SAAAX,GAAE,OAAIA,IAAOP,EAAKO,MACrDY,QAAS,WAAOjB,EAAoBF,EAAKO,GAAIP,EAAKoB,WAFtD,SAIKpB,EAAKoB,SAAW,WAAa,gBAI1C,gCACI,8BAAMpB,EAAKqB,OACX,8BAAMrB,EAAKsB,gB,kBCQRC,EAzBkB,SAAC,GAAiF,IAAhFC,EAA+E,EAA/EA,SAAUC,EAAqE,EAArEA,gBAAiBC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,MAAUnC,EAAW,uFAM9G,OACI,gCACI,qBAAKU,UAAWC,IAAOyB,WAAvB,SACA,cAAC,IAAD,CACIC,WAAYJ,EACZK,kBAAmBP,EACnBQ,gBAAiBP,EACjBQ,mBAAoB,EACpBC,SAZS,SAACC,GAClBR,EAAiBQ,EAAYX,IAYrBY,UAAU,YACVC,UAAU,gBAGbT,EAAMU,KAAI,SAAAtC,GAAI,OAAI,cAAC,EAAD,aAAoBA,KAAMA,GAAWP,GAA1BO,EAAKO,W,yBCnBzCgC,E,4MAEFC,kBAAoB,WAEhB,EAAK/C,MAAMgD,SAAS,EAAKhD,MAAMiC,YAAa,EAAKjC,MAAM+B,W,EAI3DkB,OAAS,WAEL,OACI,8BACK,EAAKjD,MAAMkD,WACV,cAAC,IAAD,IACA,cAAC,EAAD,eACM,EAAKlD,W,YAfLE,IAAML,WAoCxBsD,EAAYhD,aAbI,SAACV,GACnB,MAAO,CACH0C,MAAO1C,EAAM2D,UAAUjB,MACvBJ,SAAUtC,EAAM2D,UAAUrB,SAC1BC,gBAAiBvC,EAAM2D,UAAUpB,gBACjCC,YAAaxC,EAAM2D,UAAUnB,YAC7BiB,WAAYzD,EAAM2D,UAAUF,WAC5B1C,oBAAqBf,EAAM2D,UAAU5C,oBACrCd,OAAQD,EAAME,cAAcD,UAKQ,CAAE2D,eAAYL,aAAUvC,wBAAqByB,uBAE1EoB,sBACXH,EACAvD,IAFW0D,CAGbR","file":"static/js/6.03ad0225.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//tut stworuju okremyj mapStateToProps i prokyduju wlastywist isAuth z state\r\n//szczob okremo ne prokyduwaty w konrzij komponenti\r\nlet mapStateToPropsForRedirect = (state) =>{\r\n    return {\r\n        isAuth: state.authorization.isAuth\r\n    }\r\n}\r\n\r\n//stworiujemo HOC w jaku peredajemo naszu zwyklu komponentu, szczob dodaty do\r\n//nej redirect\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    //wseredyni HOC stworiuju klasowu komponentu kotra renderyt redirect, jakszo isAuth = false\r\n    //abo Component\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render(){\r\n            if (!this.props.isAuth) return (<Redirect to=\"/login\"/>)\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    //Obertajemo clasowu componentu connect, i prokydajemo w nei propsamy isAuth, szczob ne robyty tse w \r\n    //konij komponenti okremo\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    //powertajemo wrze zakonekczenu komponentu z redirektom\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UsersPage_item__2M5xp\",\"avatarButton\":\"UsersPage_avatarButton__3QkLA\",\"profileImg\":\"UsersPage_profileImg__31-bS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"UsersPage_pagination__Vzt88\"};","import React from 'react';\r\nimport styles from './UsersPage.module.css';\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { UsersType } from '../../../redux/users-reducer'\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    toggleFollowingUser: (userId: number, followed: boolean) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user , followingInProgress, toggleFollowingUser}) => {\r\n\r\n    return (\r\n    <div className={styles.item}>\r\n        <div className={styles.avatarButton}>\r\n            <div>\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img alt=\"small avatar\" className={styles.profileImg}\r\n                        src={user.photos.small !== null ? user.photos.small : userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <Button type=\"submit\" variant=\"dark\" \r\n                    disabled={followingInProgress.some(id => id === user.id)} \r\n                    onClick={() => {toggleFollowingUser(user.id, user.followed)}}\r\n                >\r\n                    {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n            {/* <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div> */}\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\n//import styles from './UsersPage.module.css';\r\nimport Pagination from 'react-js-pagination'\r\nimport User from './User/User';\r\nimport styles from './UsersPage.module.css'\r\nimport { UsersType } from '../../redux/users-reducer';\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    users: Array<UsersType>\r\n    followingInProgress: Array<number>\r\n    toggleFollowingUser: (userId: number, followed: boolean) => void\r\n    handlePageChange: (pageNumber:number, pageSize: number) => void\r\n}\r\n\r\n\r\nlet Users: React.FC<PropsType> = ({pageSize, totalUsersCount, currentPage, handlePageChange, users, ...props}) => {\r\n\r\n    const onPageChange = (pageNumber: number): void =>{\r\n        handlePageChange(pageNumber, pageSize);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.pagination}>\r\n            <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={pageSize}\r\n                totalItemsCount={totalUsersCount}\r\n                pageRangeDisplayed={5}\r\n                onChange={onPageChange}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n            />\r\n            </div>\r\n            {users.map(user => <User key={user.id} user={user}  {...props}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Users","import React from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport {\r\n    selectPage,\r\n    getUsers,\r\n    toggleFollowingUser,\r\n    handlePageChange\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Loader from '../commonElements/loader/loader';\r\nimport { compose } from 'redux';\r\nimport withAuthRedirect from '../../HightOrderComponent(hoc)/withAuthRedirect';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype PropsFromRedux = ConnectedProps <typeof connector>\r\n\r\ntype PropsType = PropsFromRedux\r\n\r\nclass UsersPage extends React.Component<PropsType> {\r\n\r\n    componentDidMount = () => {\r\n        //get users for page 1\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render = () => {\r\n        \r\n        return (\r\n            <div>\r\n                {this.props.isFetching \r\n                ? <Loader /> \r\n                : <Users \r\n                    {...this.props}\r\n                    />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.authorization.isAuth\r\n    };\r\n};\r\n\r\n\r\nconst connector = connect (mapStateToProps, { selectPage, getUsers, toggleFollowingUser, handlePageChange})\r\n\r\nexport default compose(\r\n    connector,\r\n    withAuthRedirect\r\n)(UsersPage);"],"sourceRoot":""}