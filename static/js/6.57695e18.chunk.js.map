{"version":3,"sources":["HightOrderComponent(hoc)/withAuthRedirect.js","components/Users/User/UsersPage.module.css","components/Users/UsersPage.module.css","components/Users/User/User.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authorization","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","User","user","className","styles","item","avatarButton","id","alt","profileImg","src","photos","small","userPhoto","Button","type","variant","disabled","isFollowFetching","some","onClick","toggleFollowingUser","followed","name","status","Users","pageSize","totalUsersCount","onPageChange","currentPage","pagination","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","itemClass","linkClass","users","map","UsersPage","componentDidMount","getUsers","pageNumber","selectPage","toggleIsFetching","usersAPI","then","data","setUsers","items","render","isFetching","unfollow","follow","toggleIsFollowFetching","unfollowUser","followUser","compose","usersPage"],"mappings":"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","file":"static/js/6.57695e18.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//tut stworuju okremyj mapStateToProps i prokyduju wlastywist isAuth z state\r\n//szczob okremo ne prokyduwaty w konrzij komponenti\r\nlet mapStateToPropsForRedirect = (state) =>{\r\n    return {\r\n        isAuth: state.authorization.isAuth\r\n    }\r\n}\r\n\r\n//stworiujemo HOC w jaku peredajemo naszu zwyklu komponentu, szczob dodaty do\r\n//nej redirect\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    //wseredyni HOC stworiuju klasowu komponentu kotra renderyt redirect, jakszo isAuth = false\r\n    //abo Component\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render(){\r\n            if (!this.props.isAuth) return (<Redirect to=\"/login\"/>)\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    //Obertajemo clasowu componentu connect, i prokydajemo w nei propsamy isAuth, szczob ne robyty tse w \r\n    //konij komponenti okremo\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    //powertajemo wrze zakonekczenu komponentu z redirektom\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UsersPage_item__2M5xp\",\"avatarButton\":\"UsersPage_avatarButton__3QkLA\",\"profileImg\":\"UsersPage_profileImg__31-bS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"UsersPage_pagination__Vzt88\"};","import React from 'react';\r\nimport styles from './UsersPage.module.css';\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nlet User = ({user, ...props}) => {\r\n\r\n    return (\r\n    <div className={styles.item}>\r\n        <div className={styles.avatarButton}>\r\n            <div>\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img alt=\"small avatar\" className={styles.profileImg}\r\n                        src={user.photos.small !== null ? user.photos.small : userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <Button type=\"submit\" variant=\"dark\" \r\n                    disabled={props.isFollowFetching.some(id => id === user.id)} \r\n                    onClick={() => {props.toggleFollowingUser(user.id, user.followed)}}\r\n                >\r\n                    {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n            <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div>\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\n//import styles from './UsersPage.module.css';\r\nimport Pagination from 'react-js-pagination'\r\nimport User from './User/User';\r\nimport styles from './UsersPage.module.css'\r\n\r\nlet Users = ({pageSize, totalUsersCount, onPageChange, currentPage, ...props}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.pagination}>\r\n            <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={pageSize}\r\n                totalItemsCount={totalUsersCount}\r\n                pageRangeDisplayed={5}\r\n                onChange={onPageChange}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n            />\r\n            </div>\r\n            {props.users.map(user => <User key={user.id} user={user}  {...props}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectPage,\r\n    getUsers,\r\n    toggleIsFetching,\r\n    setUsers,\r\n    toggleFollowingUser\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Loader from '../commonElements/loader/loader';\r\nimport usersAPI from '../../api/api';\r\nimport { compose } from 'redux';\r\nimport withAuthRedirect from '../../HightOrderComponent(hoc)/withAuthRedirect';\r\n\r\n\r\nclass UsersPage extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        //get users for page 1\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.selectPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        //getUsers function what get users from server\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(data.items);    \r\n        });\r\n    }\r\n\r\n\r\n    render = () => {\r\n        \r\n        return (\r\n            <div>\r\n                {this.props.isFetching \r\n                ? <Loader /> \r\n                : <Users \r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    onPageChange={this.onPageChange}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow} \r\n                    toggleIsFollowFetching={this.props.toggleIsFollowFetching}\r\n                    isFollowFetching={this.props.isFollowFetching}\r\n                    unfollowUser={this.props.unfollowUser}\r\n                    followUser={this.props.followUser}\r\n                    {...this.props}\r\n                    />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        isFollowFetching: state.usersPage.isFollowFetching,\r\n        isAuth: state.authorization.isAuth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{ selectPage, toggleIsFetching, setUsers, getUsers, toggleFollowingUser}),\r\n    withAuthRedirect\r\n)(UsersPage);\r\n\r\n//zamist funkcji mapDispatchToProps kotra stworuje callbacki, mo≈ºna w connect 2 parametrom peredaty \r\n//object z action creatoriw. Tse skoroczuje kod\r\n\r\n// let mapDispatchToProps = (dispatch) => {    tsia funkcija = tsiomu {follow, unfollow, setUsers, selectPage, setTotalCount, toggleIsFetching}\r\n//     return{\r\n//         follow: (userId) => {\r\n//             dispatch(followedAC(userId));\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowedAC(userId));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n\r\n//         selectPage: (currentPage) => {\r\n//             dispatch (selectPageAC(currentPage));\r\n//         },\r\n\r\n//         setTotalCount: (totalCount) => {\r\n//             dispatch (setTotalCountAC(totalCount));\r\n//         },\r\n\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching));\r\n//         }\r\n//     }\r\n// }\r\n\r\n//w importi do nas ne prychodyt funkcjija a prychodyt tilky posylania na tsiu \r\n//funkciju. Tobto ajkszczo my prokynemo funkciju czerez propsy, to wona wyzwetsia w fajli de wona zapysana\r\n//a connect zi swojeji storony stworyt dla nas dispatch. Tobto my wykorystowujemo funcji action creator dla stworenia\r\n//objektu i tsej odjekt poti dispatczytsia w reduser i tam w≈ºe wyzywajetsia neobchidna funkcjia\r\n\r\n//export default connect(mapStateToProps, \r\n    //w mapDispatch to props morzna peredawaty i actionCreator, jaki budut zadispatczeni w store\r\n    //i takorz morzna peredawaty thunkkreator\r\n    //{ selectPage, toggleIsFetching, setUsers,\r\n        //thunk creators \r\n        //getUsers, unfollowUser, followUser})(RedirectComponent);"],"sourceRoot":""}