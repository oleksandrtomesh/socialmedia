{"version":3,"sources":["components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/NewMessage/NewMessages.module.css","redux/selectors/dialogSelectors.ts","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/NewMessage/NewMessage.tsx","components/Dialogs/NewMessage/NewMessageContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","getDialogData","state","dialogPage","dialogData","getMessageData","messageData","Dialog","id","name","className","c","dialog","to","Messages","message","messages","NewMessages","props","onSubmit","value","addMessage","render","handleSubmit","addNewMessage","textarea","component","InputCustom","placeholder","validate","maxLengthCreator","CustomButton","NewMessageContainer","connect","newMessageText","connector","withAuthRedirect","useSelector","dialogElements","map","d","messageElements","m","dialogs"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,2B,0CCAhGD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,SAAW,gC,gECCnEC,EAAgB,SAACC,GAAD,OACzBA,EAAMC,WAAWC,YAERC,EAAiB,SAACH,GAAD,OAC1BA,EAAMC,WAAWG,a,iCCMNC,EAR2B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAC5C,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcL,EAA3B,SAAgCC,O,oCCK7BK,EAR8B,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,QAAiB,EAARP,GACpD,OACI,qBAAKE,UAAWC,IAAEK,SAAlB,SACKD,K,0DCqCEE,EApCqC,SAACC,GAWjD,OACI,cAAC,IAAD,CACIC,SARY,SAACC,GACjBF,EAAMG,WAAWD,EAAML,SACvBK,EAAML,QAAU,IAQZO,OAAQ,gBAAEC,EAAF,EAAEA,aAAF,OAEJ,uBAAMJ,SAAUI,EAAcb,UAAWC,IAAEa,cAA3C,UACI,8BACI,cAAC,IAAD,CAAOd,UAAWC,IAAEc,SAChBhB,KAAK,UACLiB,UAAWC,IACXC,YAAY,qBACZC,SAAUC,YAAiB,SAGnC,8BACI,cAACC,EAAA,EAAD,4BClBTC,EAJGC,aANI,SAAC/B,GACnB,MAAO,CACHgC,eAAgBhC,EAAMC,WAAW+B,kBAIE,CAACb,gBAEhBc,CAAUlB,GCqBvBmB,uBA1BW,WAEtB,IAAMhC,EAAaiC,YAAYpC,GACzBK,EAAc+B,YAAYhC,GAE5BiC,EAAiBlC,EAAWmC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAqB/B,KAAM+B,EAAE/B,KAAMD,GAAIgC,EAAEhC,IAA5BgC,EAAE/B,SAErDgC,EAAkBnC,EAAYiC,KAAK,SAAAG,GAAC,OAAI,cAAC,EAAD,CAA0B3B,QAAS2B,EAAE3B,QAASP,GAAIkC,EAAElC,IAArCkC,EAAE3B,YAE7D,OACI,sBAAKL,UAAWC,IAAEgC,QAAlB,UACI,sBAAKjC,UAAWC,IAAEC,OAAlB,UACI,yCACE0B,KAEN,sBAAK5B,UAAWC,IAAEI,QAAlB,UACI,0CACE0B,KAEN,8BACI,cAAC,EAAD","file":"static/js/5.afdb7f0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2fyHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1sRJI\",\"dialog\":\"Dialogs_dialog__33739\",\"message\":\"Dialogs_message__10WN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNewMessage\":\"NewMessages_addNewMessage__xvfjG\",\"textarea\":\"NewMessages_textarea__3Evw9\"};","import { AppStateType } from './../redux-store'\r\n\r\nexport const getDialogData = (state: AppStateType) =>\r\n    state.dialogPage.dialogData\r\n\r\nexport const getMessageData = (state: AppStateType) =>\r\n    state.dialogPage.messageData\r\n","import React from 'react';\r\nimport { NavLink} from 'react-router-dom'\r\nimport c from './Dialog.module.css'\r\n\r\nconst Dialog: React.FC<DialogPropsTYpe> = ({id, name}) => {\r\n    return (\r\n        <div className={c.dialog}>\r\n            <NavLink to={'/dialogs/' + id}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;\r\n\r\ntype DialogPropsTYpe = {\r\n    id: number\r\n    name: string\r\n}","import React from 'react';\r\nimport c from './Messages.module.css'\r\n\r\n\r\nconst Messages: React.FC<MessagePropsType> = ({message, id}) => {\r\n    return (\r\n        <div className={c.messages}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;\r\n\r\ntype MessagePropsType = {\r\n    id: number\r\n    message:string\r\n}","import React from 'react';\r\nimport { Field, Form, } from 'react-final-form';\r\nimport c from './NewMessages.module.css';\r\nimport { InputCustom } from \"../../commonElements/InputCustom\";\r\nimport { CustomButton } from \"../../commonElements/CustomButton\";\r\nimport {maxLengthCreator } from '../../../utilits/validators';\r\nimport { NewMessagesPropsType } from './NewMessageContainer';\r\n\r\nconst NewMessages: React.FC<NewMessagesPropsType> = (props) => {\r\n\r\n    type ValueType = {\r\n        message: string\r\n    }\r\n    let addNewMessage = (value: ValueType): void => {\r\n        props.addMessage(value.message);\r\n        value.message = \"\";\r\n\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={addNewMessage}\r\n\r\n            render={({handleSubmit})=>(\r\n                \r\n                <form onSubmit={handleSubmit} className={c.addNewMessage}>\r\n                    <div>\r\n                        <Field className={c.textarea} \r\n                            name=\"message\" \r\n                            component={InputCustom} \r\n                            placeholder=\"Enter your message\" \r\n                            validate={maxLengthCreator(150)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <CustomButton>Post</CustomButton>\r\n                    </div>\r\n                </form>\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default NewMessages;","import { connect, ConnectedProps } from 'react-redux';\r\nimport {\r\n    addMessage\r\n} from '../../../redux/dialogs-reducer';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport NewMessages from './NewMessage';\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        newMessageText: state.dialogPage.newMessageText\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {addMessage})\r\n\r\nconst NewMessageContainer = connector(NewMessages);\r\n\r\nexport default NewMessageContainer;\r\n\r\nexport type NewMessagesPropsType = ConnectedProps<typeof connector>","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport withAuthRedirect from '../../HightOrderComponent(hoc)/withAuthRedirect'\r\nimport { getDialogData, getMessageData } from '../../redux/selectors/dialogSelectors'\r\nimport Dialog from './Dialog/Dialog'\r\nimport c from './Dialogs.module.css'\r\nimport Messages from './Messages/Messages'\r\nimport NewMessageContainer from './NewMessage/NewMessageContainer'\r\n\r\n\r\nconst Dialogs: React.FC = () => {\r\n\r\n    const dialogData = useSelector(getDialogData)\r\n    const messageData = useSelector(getMessageData)\r\n\r\n    let dialogElements = dialogData.map( d => <Dialog key={d.name} name={d.name} id={d.id} /> )\r\n\r\n    let messageElements = messageData.map( m => <Messages key={m.message} message={m.message} id={m.id} />)\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialog}>\r\n                <h3>Dialogs</h3>\r\n                { dialogElements }\r\n            </div>\r\n            <div className={c.message}>\r\n                <h3>Messages</h3>\r\n                { messageElements }\r\n            </div>\r\n            <div>\r\n                <NewMessageContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Dialogs);"],"sourceRoot":""}